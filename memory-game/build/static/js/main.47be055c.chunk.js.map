{"version":3,"sources":["components/header/header.js","services/ImageService.js","hooks/http.hook.js","utils/createCards/createCards.js","components/spinner/spinner.js","components/question/question.js","store/actions/index.js","components/cards/cards.js","utils/timerActions/timerActions.js","components/result-table/result-table.js","components/interactive-menu/interactive-menu.js","components/app/App.js","store/reducer/index.js","store/index.js","index.js"],"names":["Header","className","useImageService","useState","loading","setLoading","error","setError","response","useCallback","url","a","method","body","headers","fetch","ok","Error","status","json","data","message","useHttp","getAllCharacters","res","map","_transormCharacter","char","id","name","path","opened","createCardsArr","indexArrData","Array","from","keys","sort","Math","random","newChar","position","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","Question","dispatch","useDispatch","onClick","Cards","setData","openedCards","setOpenedCards","disabled","setDisabled","counterOpened","setCounterOpened","useSelector","state","started","allOppened","playAgain","request","then","createCards","removeFlip","forEach","item","i","itemRefs","current","classList","remove","useEffect","newData","useRef","reverseCard","add","focus","oneCardOpenedTimeout","twoCardOpenedTimeout","length","setTimeout","clearTimeout","firstObj","secondObj","firstStep","slice","secondStep","createNewData","items","cards","tabIndex","ref","el","onKeyPress","e","key","src","alt","renderCards","spinner","newGame","content","timerActions","props","hours","minutes","seconds","ResultTable","totalTime","showMessage","results","InteractiveMenu","setSeconds","setMinutes","setHours","setTotalTime","interval","setInterval","timer","clearInterval","newObj","App","initialState","reducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47be055c.chunk.js","sourcesContent":["import \"../header/header.sass\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__label\">Welcome to memory game!</h1>\r\n            <h2 className=\"header__title\">Here you should find correct pairs of cards.</h2>\r\n            <h2 className=\"header__subtitle\">Here is not time limit. Just enjoy it.</h2>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useImageService = () => {\r\n    const {loading, response} = useHttp();\r\n\r\n    const getAllCharacters = async () => {\r\n        const res = await response(\"http://localhost:3001/cards\");\r\n        return res.map(_transormCharacter);\r\n    }\r\n\r\n    const _transormCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            path: char.path,\r\n            opened: char.opened\r\n        }\r\n    }\r\n\r\n    return {getAllCharacters, loading};\r\n}\r\n\r\nexport default useImageService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const response = useCallback(async (url, method = \"GET\", body = null, headers = {\"Content-Type\": \"application/json\", 'Accept': 'application/json'} ) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, [])\r\n\r\n    return {loading, response, error};\r\n}","const createCardsArr = (char) => {\r\n    const indexArrData = Array.from(Array(36).keys()).sort(() => Math.random() - 0.5);\r\n\r\n    const newChar = [...char, ...char];\r\n\r\n    const newData = indexArrData.map(position => newChar[position]);\r\n\r\n    return newData;\r\n};\r\n\r\nexport default createCardsArr;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import {togglePlayAgain} from \"../../store/actions\";\r\n\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nimport \"../question/question.sass\";\r\n\r\nconst Question = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"question\">\r\n            <h3 className=\"question__title\">Do you want to play again?</h3>\r\n            <button \r\n                className=\"question__btn btn btn-primary\"\r\n                onClick={() => dispatch(togglePlayAgain())}>Yes, of cource!</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Question;","\r\nexport const toggleStarted = () => {\r\n    return {type: \"TIMER_STARTED\"};\r\n};\r\n\r\nexport const toggleAllOppened = () => {\r\n    return {type: \"ALL_CARDS_OPPENED\"};\r\n};\r\n\r\nexport const togglePlayAgain = () => {\r\n    return {type: \"PLAY_AGAIN\"};\r\n};\r\n\r\n","import {useState, useEffect, useRef} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {toggleAllOppened} from '../../store/actions';\r\n\r\nimport useImageService from \"../../services/ImageService\"\r\nimport createCardsArr from '../../utils/createCards/createCards';\r\nimport Spinner from '../spinner/spinner';\r\nimport Question from '../question/question';\r\n\r\nimport '../cards/cards.sass'\r\n\r\n// Общее число карточек\r\nconst CARDS = 36;\r\n\r\nconst Cards = () => {\r\n    const [data, setData] = useState([]);\r\n    const [openedCards, setOpenedCards] = useState([]);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [counterOpened, setCounterOpened] = useState(0);\r\n\r\n    // Ипользуем кастомный хук по запросу даных с API\r\n    const {getAllCharacters, loading} = useImageService();\r\n\r\n    // Используем useSelector react-redux для получения состояния started из стора\r\n    const {started, allOppened, playAgain} = useSelector(state => state);\r\n\r\n    // Создаем переменную dispatch для возможности выполнения функции action creator\r\n    const dispatch = useDispatch();\r\n    \r\n    // Функция по отправке запроса на локальный сервер и отрисовке карточек\r\n    function request() {\r\n        getAllCharacters()\r\n            .then(createCards);\r\n    };\r\n    // Функция по возвращению карточек в исходное состояние\r\n    function removeFlip() {\r\n        data.forEach((item, i) => {\r\n            if (!item.opened) {\r\n                itemRefs.current[i].classList.remove('flip');\r\n            }\r\n        });\r\n        setOpenedCards([]);\r\n    };\r\n    // Функция по модификации стейта - изменение свойства opened\r\n    function createNewData () {\r\n        clearTimeout(oneCardOpenedTimeout.current);\r\n        //Создаем два новых объекта для открытых карточек, в которых меняем значение opened на true\r\n        const firstObj = {...data[openedCards[0]], opened: !data[openedCards[0]].opened};\r\n        const secondObj = {...data[openedCards[1]], opened: !data[openedCards[1]].opened};\r\n        //Заменяем в data объекты открытых карточек для сохранения иммутабельности\r\n        const firstStep = [...data.slice(0, openedCards[0]), firstObj, ...data.slice(openedCards[0] + 1)];\r\n        const secondStep = [...firstStep.slice(0, openedCards[1]), secondObj, ...firstStep.slice(openedCards[1] + 1)];\r\n\r\n        setData(secondStep);\r\n\r\n        setCounterOpened(item => item + 2);\r\n    }\r\n\r\n    // Запрос на сервер и создание карточек\r\n    // eslint-disable-next-line\r\n    useEffect(request, []);\r\n    // Ререндер карточек при необходимости запуска новой игры\r\n    useEffect(() => {\r\n        if (playAgain) {\r\n            request();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [playAgain]);\r\n\r\n    // Заполняем стейт данными карточек в рандомном порядке, получая данные с локальной БД\r\n    const createCards = (char) => {\r\n        const newData = createCardsArr(char);\r\n\r\n        setData(newData);\r\n    };\r\n\r\n    // Используем рефы для получения карточки при нажатии и установки фокуса\r\n    const itemRefs = useRef([]);\r\n\r\n    // Функция переворачивания карточек и установки фокуса\r\n    const reverseCard = (i) => {\r\n        itemRefs.current[i].classList.add('flip');\r\n        itemRefs.current[i].focus();\r\n        setOpenedCards(item => [...item, i]);\r\n    };\r\n    // Используем useRef для предотвращения потери таймера при перерендере\r\n    const oneCardOpenedTimeout = useRef();\r\n    const twoCardOpenedTimeout = useRef();\r\n\r\n    // Сравнение открытых карточек и выполнение дальнейших действий по результатам условия\r\n    useEffect(() => {\r\n        if (openedCards.length === 1) {\r\n            oneCardOpenedTimeout.current = setTimeout(() => {\r\n                removeFlip();\r\n            }, 5000);\r\n        };\r\n        // Если количество открытых карточек - 2, то производим изменение элемента opened в массиве объектов\r\n        if (openedCards.length === 2) {\r\n            setDisabled(true);\r\n            if (data[openedCards[0]].id === data[openedCards[1]].id) {\r\n                createNewData();\r\n            }\r\n\r\n            clearTimeout(oneCardOpenedTimeout.current);\r\n            // Если условия выше не выполнились и две открытые карточки - разные, то закрываем их основываясь на значении opened\r\n            twoCardOpenedTimeout.current = setTimeout(() => {\r\n                removeFlip();\r\n                setDisabled(false);\r\n            }, 2000);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [openedCards])\r\n    // Дополнительный useEffect с зависимостью от data, ввиду асинхронности выполнения сеттеров\r\n    useEffect(() => {\r\n        clearTimeout(twoCardOpenedTimeout.current);\r\n        setTimeout(() => {\r\n            //Проверяем счетчик открытых карточек на равенство с общим количеством карточек для вывода сообщения о новой игре\r\n            if (counterOpened === CARDS) {\r\n                setCounterOpened(0);\r\n                setTimeout(() => {\r\n                    dispatch(toggleAllOppened());\r\n                }, 2000)\r\n            }\r\n\r\n            setOpenedCards([]);\r\n            setDisabled(false);\r\n        }, 2000);\r\n        // eslint-disable-next-line\r\n    }, [data]);\r\n\r\n\r\n    // Динамическое построение карточек на странице\r\n    const renderCards = () => {\r\n        const cards = data.map((item, i) => {\r\n            return (\r\n                <button \r\n                    className='card'\r\n                    tabIndex={0}\r\n                    id={item.id} \r\n                    disabled={openedCards.length === 2 ? disabled : !started}\r\n                    key={i}\r\n                    ref={el => itemRefs.current[i] = el}\r\n                    onClick={() => {reverseCard(i)}}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === '' || e.key === 'Enter') {\r\n                            reverseCard(i);\r\n                        } \r\n                    }}>\r\n                        <img src={item.path} alt={item.name} className=\"card-front\" />\r\n                        <div className='card-back'></div>\r\n                </button>\r\n            );\r\n        });\r\n        // Конструкция для центрирования спиннера загрузки\r\n        return (\r\n            <div className=\"container\">\r\n                {cards}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const items = renderCards();\r\n    \r\n    const spinner = loading ? <Spinner/> : null;\r\n    const newGame = allOppened ? <Question/> : null\r\n    const content = !loading && !allOppened ? items : null;\r\n\r\n    return (\r\n        <main className=\"memory-game\">\r\n            {content}\r\n            {newGame}\r\n            {spinner}\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Cards;","const timerActions = (props) => {\r\n    const hours = props.hours < 10 ? `0${props.hours}` : props.hours;\r\n    const minutes = props.minutes < 10 ? `0${props.minutes}` : props.minutes;\r\n    const seconds = props.seconds < 10 ? `0${props.seconds}` : props.seconds;\r\n\r\n    return {hours, minutes, seconds};\r\n}\r\n\r\nexport default timerActions;","import timerActions from \"../../utils/timerActions/timerActions\";\r\n\r\nimport \"../result-table/result-table.sass\"\r\n// Динамичекое построение таблицы результатов на основе props приходящих из interactive-menu\r\nconst ResultTable = ({totalTime}) => {\r\n    const items = totalTime.map((item, i) => {\r\n        const {hours, minutes, seconds} = timerActions(item);\r\n        return (\r\n            <div className=\"results__container\" key={i}>\r\n                <div className=\"results__number\">{`${i + 1}.`}</div>\r\n                <div className=\"results__time\">{`${hours}:${minutes}:${seconds}`}</div>\r\n            </div>\r\n        )\r\n    })\r\n    //Функция по показу сообщения, что результаты пока отсутствуют\r\n    const showMessageFunc = () => {\r\n        return (\r\n            <div className=\"empty-results\">There are no results yet</div>\r\n        )\r\n    }\r\n\r\n    const showMessage = showMessageFunc();\r\n\r\n    const results = totalTime.length !== 0 ? items : showMessage;\r\n\r\n    return (\r\n        <div className=\"results\">\r\n            {results}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultTable;","import {useState, useEffect, useRef} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {toggleStarted} from '../../store/actions';\r\n\r\nimport ResultTable from '../result-table/result-table';\r\n\r\nimport '../interactive-menu/interactive-menu.sass'\r\n\r\nconst InteractiveMenu = () => {\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [hours, setHours] = useState(0);\r\n    const [totalTime, setTotalTime] = useState([]);\r\n\r\n    const interval = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {started, allOppened} = useSelector(state => state);\r\n    //При нажатии кнопки старт происходит обнуление таймера и его запуск\r\n    useEffect(() => {\r\n        if (started) {\r\n            setSeconds(0);\r\n            setMinutes(0);\r\n            setHours(0);\r\n            interval.current = setInterval(timer, 1000);\r\n        };\r\n\r\n        return () => {\r\n            interval.current && clearInterval(interval.current);\r\n            interval.current = null;\r\n        };\r\n        // eslint-disable-next-line\r\n    }, [started]);\r\n    //Заполнение массива объектами с затраченным временем для дальнейшей передачи в компонент result-table\r\n    useEffect(() => {\r\n        if (allOppened) {\r\n            setTotalTime(item => {\r\n                const newObj = {\r\n                    hours,\r\n                    minutes,\r\n                    seconds\r\n                };\r\n                return [...item, newObj];\r\n            });\r\n        };\r\n        // eslint-disable-next-line\r\n    }, [allOppened]);\r\n    // Функция запуска таймера изменяющая состояние глобальной переменной started\r\n    const startTimer = () => {\r\n        dispatch(toggleStarted());\r\n    };\r\n    //Логика таймера\r\n    const timer = () => {\r\n        setSeconds(item => item + 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (seconds === 60) {\r\n            setMinutes(item => item + 1);\r\n            setSeconds(0);\r\n        };   \r\n\r\n        if (minutes === 60) {\r\n            setHours(item => item + 1);\r\n            setMinutes(0);\r\n        };\r\n        // eslint-disable-next-line\r\n    }, [seconds]);\r\n\r\n    return (\r\n        <section className=\"interactive\">\r\n            <h2 className=\"interactive__label\">This is interactive panel</h2>\r\n                <div className=\"container\">\r\n                    <div className=\"interactive__results\">\r\n                        <h3 className=\"interactive__title\">Score table</h3>\r\n                        <ResultTable totalTime={totalTime}/>\r\n                    </div>\r\n                    <div className=\"interactive__container\">\r\n                        <div className=\"interactive__timer\">\r\n                            <div className=\"interactive__timer-hours\">{hours < 10 ? `0${hours}` : hours}:</div>\r\n                            <div className=\"interactive__timer-minutes\">{minutes < 10 ? `0${minutes}` : minutes}:</div>\r\n                            <div className=\"interactive__timer-seconds\">{seconds < 10 ? `0${seconds}` : seconds}</div>\r\n                        </div> \r\n                        <button \r\n                            className=\"interactive__start btn btn-success mt-2\"\r\n                            onClick={startTimer}\r\n                            disabled={started}\r\n                        >START</button> \r\n                    </div>\r\n                </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default InteractiveMenu;","import Header from \"../header/header\";\r\nimport Cards from \"../cards/cards\";\r\nimport InteractiveMenu from \"../interactive-menu/interactive-menu\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <InteractiveMenu/>\r\n            <Cards/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","const initialState = [\r\n    {started: false},\r\n    {allOppened: false},\r\n    {playAgain: null}\r\n]\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"TIMER_STARTED\":\r\n            return {\r\n                ...state,\r\n                started: true,\r\n                playAgain: false\r\n            }\r\n        case \"ALL_CARDS_OPPENED\":\r\n            return {\r\n                ...state,\r\n                allOppened: true,\r\n                started: false\r\n            }\r\n        case \"PLAY_AGAIN\":\r\n            return {\r\n                ...state,\r\n                playAgain: true,\r\n                allOppened: false\r\n            }\r\n        default:\r\n            return initialState\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/app/App';\nimport store from \"./store\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App/>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}